@model SpcBowling.Models.Player

@{
    ViewBag.Title = "Edit Player";
}

<h3>Edit Player</h3>

@using (Html.BeginForm("Edit", "Player", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PlayerID)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Gender", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageData, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="position:relative" class="col-md-10">
                <a class="btn btn-default" href='javascript:;'>
                    Choose an Image...
                    <input type="file" name="Image" size="40" accept="image/gif, image/jpeg, image/png"
                           style="position:absolute;z-index:2;top:0;left:0;filter: alpha(opacity=0);opacity:0;background-color:transparent;color:transparent;"
                           onchange='$("#upload-file-info").html($(this).val()); $("#no-image-label").hide();' />
                </a>
                <span class="label label-info" id="upload-file-info"></span>
                <br />
                @if (Model.ImageData != null)
                {
                    <img class="img-thumbnail" width="100" height="100" src="@Url.Action("GetImage", "Player", new {Model.PlayerID})" />
                }
                else
                {
                    <img class="img-thumbnail" width="100" height="100" src="~/Content/Resources/unknown.png" />
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Player", null, new { @class = "btn btn-primary btn-sm" })
</div>

@section Scripts {
@Scripts.Render("~/bundles/spcbowl")
    @*@Scripts.Render("~/bundles/jqueryval")*@
}
